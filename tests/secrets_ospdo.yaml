# Command to login to OpenShift
oc_login_command: |
  result=$(oc login -u kubeadmin -p {{ admin_password }} https://api.crc.testing:6443)||echo $result

tripleo_passwords: ~/tripleo-standalone-passwords.yaml #CUSTOMIZE_THIS

# Adopted OpenStack admin password. Matching the install_yamls default
# to reduce developer confusion.
admin_password: 12345678 #CUSTOMIZE_THIS

# DB root passwords. Source password needs to be set based on the
# original environment, podified can be customized, it matches the
# install_yamls default to reduce developer confusion.


# TODO change all the passes:
# sshpass -p12345678 ssh root@titan132.lab.eng.tlv2.redhat.com 'export KUBECONFIG=/home/ocp/crucible/kubeconfig.ostest; oc get secret tripleo-passwords -o jsonpath='\{.data.*}' | base64 -d | grep MysqlRootPassword'|sed 's/.*: //g'
# OSPdO vars
#source_db_root_password: "{{ lookup('ansible.builtin.env', 'SOURCE_DB_ROOT_PASSWORD') }}"
podified_db_root_password: 12345678
# below needs to close with \'" , i,e {{ ssh_to_ospdo_osp_controller }} hostname '"
ssh_to_ospdo_openstackclient: |
  sshpass -p12345678 ssh root@titan132.lab.eng.tlv2.redhat.com "
  export KUBECONFIG=/home/ocp/crucible/kubeconfig.ostest
  oc exec -t -n openstack openstackclient -c openstackclient -- bash -c '
ssh_to_ospdo_osp_controller: ssh controller-0.ctlplane \


# Service account passwords (not DB passwords).
cinder_password: "{{ lookup('file', tripleo_passwords) | from_yaml | community.general.json_query('*.CinderPassword') | first }}"
glance_password: "{{ lookup('file', tripleo_passwords) | from_yaml | community.general.json_query('*.GlancePassword') | first }}"
ironic_password: "{{ lookup('file', tripleo_passwords) | from_yaml | community.general.json_query('*.IronicPassword') | first }}"
manila_password: "{{ lookup('file', tripleo_passwords) | from_yaml | community.general.json_query('*.ManilaPassword') | first }}"
neutron_password: "{{ lookup('file', tripleo_passwords) | from_yaml | community.general.json_query('*.NeutronPassword') | first }}"
heat_password: "{{ lookup('file', tripleo_passwords) | from_yaml | community.general.json_query('*.HeatPassword') | first }}"
heat_auth_encryption_key: "{{ lookup('file', tripleo_passwords) | from_yaml | community.general.json_query('*.HeatAuthEncryptionKey') | first }}"
nova_password: "{{ lookup('file', tripleo_passwords) | from_yaml | community.general.json_query('*.NovaPassword') | first }}"
octavia_password: "{{ lookup('file', tripleo_passwords) | from_yaml | community.general.json_query('*.OctaviaPassword') | first }}"
placement_password: "{{ lookup('file', tripleo_passwords) | from_yaml | community.general.json_query('*.PlacementPassword') | first }}"


# Customized for OSPdO : ssh to BM host then oc exec to openstack client then ssh to controller1 via cloud-admin user:
# Following commands have to be closed with a "'
controller1_ssh: sshpass -p12345678 ssh root@titan132.lab.eng.tlv2.redhat.com 'export KUBECONFIG=/home/ocp/crucible/kubeconfig.ostest; oc exec  -n openstack openstackclient -c openstackclient -- bash -c "ssh controller-0.ctlplane
controller2_ssh: sshpass -p12345678 ssh root@titan132.lab.eng.tlv2.redhat.com 'export KUBECONFIG=/home/ocp/crucible/kubeconfig.ostest; oc exec  -n openstack openstackclient -c openstackclient -- bash -c "ssh controller-1.ctlplane
controller3_ssh: sshpass -p12345678 ssh root@titan132.lab.eng.tlv2.redhat.com 'export KUBECONFIG=/home/ocp/crucible/kubeconfig.ostest; oc exec  -n openstack openstackclient -c openstackclient -- bash -c "ssh controller-2.ctlplane
# install_yamls default: ~/install_yamls/out/edpm/ansibleee-ssh-key-id_rsa
edpm_privatekey_path: ~/install_yamls/out/edpm/ansibleee-ssh-key-id_rsa #CUSTOMIZE_THIS
