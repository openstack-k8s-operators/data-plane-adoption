- name: set shell vars pull openstack configuration ssh commands
  no_log: "{{ use_no_log }}"
  ansible.builtin.set_fact:
    pull_openstack_configuration_ssh_shell_vars: |
      CONTROLLER_SSH="{{ controller1_ssh }}"

- name: get src database service environment variables
  ansible.builtin.include_role:
    name: mariadb_copy
    tasks_from: env_vars_src.yaml

# NOTE(bogdando): env variables must be used to keep this consistent with documentation,
# where the stored values need to be compared with post-adoption ones w/o using ansible specifics
- name: test connection to the original DB
  no_log: "{{ use_no_log }}"
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    {{ mariadb_copy_shell_vars_src }}
    PULL_OPENSTACK_CONFIGURATION_DATABASES=$(podman run -i --rm --userns=keep-id -u $UID $MARIADB_IMAGE \
      mysql -h "$SOURCE_MARIADB_IP" -uroot "-p$SOURCE_DB_ROOT_PASSWORD" -e 'SHOW databases;')
    echo $PULL_OPENSTACK_CONFIGURATION_DATABASES
  register: _databases_check

- name: run mysqlcheck on the original DB to look for things that are not OK
  no_log: "{{ use_no_log }}"
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    {{ mariadb_copy_shell_vars_src }}
    PULL_OPENSTACK_CONFIGURATION_MYSQLCHECK_NOK=$(podman run -i --rm --userns=keep-id -u $UID $MARIADB_IMAGE \
      mysqlcheck --all-databases -h $SOURCE_MARIADB_IP -u root "-p$SOURCE_DB_ROOT_PASSWORD" | grep -v OK)
    echo $PULL_OPENSTACK_CONFIGURATION_MYSQLCHECK_NOK
  register: _mysqlnok_check

- name: get source Nova services topology specific configuration
  no_log: "{{ use_no_log }}"
  block:
    - name: get Nova cells mappings from database
      ansible.builtin.shell: |
        {{ shell_header }}
        {{ oc_header }}
        {{ mariadb_copy_shell_vars_src }}
        PULL_OPENSTACK_CONFIGURATION_NOVADB_MAPPED_CELLS=$(podman run -i --rm --userns=keep-id -u $UID $MARIADB_IMAGE mysql \
          -h "$SOURCE_MARIADB_IP" -uroot "-p$SOURCE_DB_ROOT_PASSWORD" nova_api -e \
          'select uuid,name,transport_url,database_connection,disabled from cell_mappings;')
        echo $PULL_OPENSTACK_CONFIGURATION_NOVADB_MAPPED_CELLS
      register: _novadb_mapped_cells_check

    - name: get Nova instances cell_ids from database
      ansible.builtin.shell: |
        {{ shell_header }}
        {{ oc_header }}
        {{ mariadb_copy_shell_vars_src }}
        PULL_OPENSTACK_CONFIGURATION_NOVADB_INSTANCES_CELL_IDS=$(podman run -i --rm --userns=keep-id -u $UID $MARIADB_IMAGE mysql \
          -h "$SOURCE_MARIADB_IP" -uroot "-p$SOURCE_DB_ROOT_PASSWORD" nova_api -e \
          "select cell_id from nova_api.instance_mappings;")
        echo $PULL_OPENSTACK_CONFIGURATION_NOVADB_INSTANCES_CELL_IDS
      register: _novadb_instances_cell_ids_check

    - name: get the host names of the registered Nova compute services
      ansible.builtin.shell: |
        {{ shell_header }}
        {{ oc_header }}
        {{ mariadb_copy_shell_vars_src }}
        PULL_OPENSTACK_CONFIGURATION_NOVA_COMPUTE_HOSTNAMES=$(podman run -i --rm --userns=keep-id -u $UID $MARIADB_IMAGE mysql \
          -h "$SOURCE_MARIADB_IP" -uroot "-p$SOURCE_DB_ROOT_PASSWORD" nova_api -e \
          "select host from nova.services where services.binary='nova-compute';")
        echo $PULL_OPENSTACK_CONFIGURATION_NOVA_COMPUTE_HOSTNAMES
      register: _nova_compute_hostnames_check

    - name: get the list of mapped Nova cells
      ansible.builtin.shell: |
        {{ shell_header }}
        {{ oc_header }}
        {{ pull_openstack_configuration_ssh_shell_vars }}
        PULL_OPENSTACK_CONFIGURATION_NOVAMANAGE_CELL_MAPPINGS=$($CONTROLLER_SSH sudo podman exec -it nova_api nova-manage cell_v2 list_cells)
        echo $PULL_OPENSTACK_CONFIGURATION_NOVAMANAGE_CELL_MAPPINGS
      register: _nova_cell_mappings_check

- name: set facts for pulled openstack services configuration
  ansible.builtin.set_fact:
    pull_openstack_configuration_databases: "{{ _databases_check.stdout }}"
    pull_openstack_configuration_mysqlcheck_nok: " {{ _mysqlnok_check.stdout }}"
    pull_openstack_configuration_novadb_mapped_cells: "{{ _novadb_mapped_cells_check.stdout }}"
    pull_openstack_configuration_novadb_instances_cell_ids: "{{ _novadb_instances_cell_ids_check.stdout }}"
    pull_openstack_configuration_nova_compute_hostnames: "{{ _nova_compute_hostnames_check.stdout }}"
    pull_openstack_configuration_novamanage_cell_mappings: "{{ _nova_cell_mappings_check.stdout }}"
