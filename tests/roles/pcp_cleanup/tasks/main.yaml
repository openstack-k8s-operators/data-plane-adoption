- name: clean up any remains of podified deployment
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    # Cleanup OpenStackControlPlane object
    oc delete --ignore-not-found=true osctlplane -l core.openstack.org/openstackcontrolplane

    # Ensure that all pods in openstack namespace are deleted
    while oc get pod | grep -E 'rabbitmq-server-0|openstack-galera-0'; do
      sleep 2;
    done

    # Cleanup OpenStackDataplane objects
    oc delete --ignore-not-found=true OpenStackDataPlaneDeployment --all
    oc delete --ignore-not-found=true OpenStackDataPlaneNodeSet --all
    oc delete --ignore-not-found=true OpenStackDataPlaneService --all

    # Delete Adoption helper pods
    oc delete --ignore-not-found=true --wait=false pod mariadb-copy-data
    oc delete --ignore-not-found=true --wait=false pvc mariadb-data
    oc delete --ignore-not-found=true --wait=false pod ovn-copy-data

    # Delete secrets
    for secret in $(oc -o name get secrets ); do
      echo "Deleting secret ${secret}";
      #(TODO: holser) oc patch can be removed when OSPRH-10262 is merged
      oc patch ${secret} -p '{"metadata":{"finalizers":[]}}' --type=merge
      oc delete ${secret} ;
    done

    # Make pvs available if they are released
    oc get pv -o json | jq -r '.items[] | select(.status.phase == "Released") | .metadata.name' | \
      xargs -I{} oc patch pv {} --type='merge' -p '{"spec":{"claimRef": null}}'

    # Delete IT certificates
    oc delete --ignore-not-found issuer rootca-internal
    oc delete --ignore-not-found secret rootca-internal

    oc delete subscription cluster-observability-operator -n openshift-operators --ignore-not-found
  when: pcp_cleanup_enabled|bool

- name: revert standalone VM to snapshotted state
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    cd {{ install_yamls_path }}/devsetup
    make standalone_revert
  when: standalone_revert_enabled|bool

- name: reset CRC storage
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    cd {{ install_yamls_path }}
    for i in {1..3}; do make crc_storage_cleanup crc_storage && break || sleep 5; done
    {{ cells_env }}
    NAMESPACE={{ rhoso_namespace }} make namespace
    for CELL in $(echo $RENAMED_CELLS); do
      oc delete pvc mysql-db-openstack-$CELL-galera-0 --ignore-not-found=true
      oc delete pvc persistence-rabbitmq-$CELL-server-0 --ignore-not-found=true
    done
  when: reset_crc_storage|bool
