- name: pre-launch test VM instance
  no_log: "{{ use_no_log }}"
  when: prelaunch_test_instance|bool
  environment:
    INSTALL_YAMLS_PATH: "{{ install_yamls_path }}"
    EDPM_PRIVATEKEY_PATH: "{{ edpm_privatekey_path }}"
    OS_CLOUD_IP: "{{ standalone_ip | default(edpm_node_ip) }}"
    OS_CLOUD_NAME: "{{ os_cloud_name }}"
    SOURCE_OSP_SSH_USER: "{{ source_osp_ssh_user }}"
  ansible.builtin.shell:
    cmd: |
      {{ shell_header }}
      alias openstack="ssh -i {{ edpm_privatekey_path }} -o StrictHostKeyChecking=no ${SOURCE_OSP_SSH_USER}@${OS_CLOUD_IP} OS_CLOUD=${OS_CLOUD_NAME} openstack"
      {{ lookup('ansible.builtin.file', prelaunch_test_instance_script) }}

- name: creates Barbican secret
  no_log: "{{ use_no_log }}"
  when: prelaunch_test_instance|bool and prelaunch_barbican_secret|default(false)
  environment:
    INSTALL_YAMLS_PATH: "{{ install_yamls_path }}"
    EDPM_PRIVATEKEY_PATH: "{{ edpm_privatekey_path }}"
    OS_CLOUD_IP: "{{ standalone_ip | default(edpm_node_ip) }}"
    OS_CLOUD_NAME: "{{ os_cloud_name }}"
    SOURCE_OSP_SSH_USER: "{{ source_osp_ssh_user }}"
  ansible.builtin.shell:
    cmd: |
      {{ shell_header }}
      alias openstack="ssh -i {{ edpm_privatekey_path }} -o StrictHostKeyChecking=no ${SOURCE_OSP_SSH_USER}@${OS_CLOUD_IP} OS_CLOUD=${OS_CLOUD_NAME} openstack"
      ${BASH_ALIASES[openstack]} secret store --name testSecret --payload 'TestPayload'

- name: saves a fernet token
  no_log: "{{ use_no_log }}"
  environment:
    INSTALL_YAMLS_PATH: "{{ install_yamls_path }}"
    EDPM_PRIVATEKEY_PATH: "{{ edpm_privatekey_path }}"
    OS_CLOUD_IP: "{{ standalone_ip | default(edpm_node_ip) }}"
    OS_CLOUD_NAME: "{{ os_cloud_name }}"
    SOURCE_OSP_SSH_USER: "{{ source_osp_ssh_user }}"
  ansible.builtin.shell:
    cmd: |
      {{ shell_header }}
      alias openstack="ssh -i {{ edpm_privatekey_path }} -o StrictHostKeyChecking=no ${SOURCE_OSP_SSH_USER}@${OS_CLOUD_IP} OS_CLOUD=${OS_CLOUD_NAME} openstack"
      ${BASH_ALIASES[openstack]} token issue -f value -c id
  register: before_adoption_token

- name: debug token
  ansible.builtin.debug:
    var: before_adoption_token

- name: create credential for sanity checking its value after adoption
  no_log: "{{ use_no_log }}"
  environment:
    INSTALL_YAMLS_PATH: "{{ install_yamls_path }}"
    EDPM_PRIVATEKEY_PATH: "{{ edpm_privatekey_path }}"
    OS_CLOUD_IP: "{{ standalone_ip | default(edpm_node_ip) }}"
    OS_CLOUD_NAME: "{{ os_cloud_name }}"
    SOURCE_OSP_SSH_USER: "{{ source_osp_ssh_user }}"
  ansible.builtin.shell:
    cmd: |
      {{ shell_header }}
      alias openstack="ssh -i {{ edpm_privatekey_path }} -o StrictHostKeyChecking=no ${SOURCE_OSP_SSH_USER}@${OS_CLOUD_IP} OS_CLOUD=${OS_CLOUD_NAME} openstack"
      ${BASH_ALIASES[openstack]} credential create admin test -f value -c id
  register: before_adoption_credential

- name: execute create resources script
  when: neutron_qe_test|bool
  environment:
    OS_CLOUD_IP: "{{ standalone_ip | default(edpm_node_ip) }}"
  ansible.builtin.shell: |
      ssh ${OS_CLOUD_IP} "set -o pipefail && chmod 744 {{ neutron_qe_dir }}/create_resources.sh && \
      {{ neutron_qe_dir }}/create_resources.sh > {{ neutron_qe_dir }}/create_resources.sh.log 2>&1"

- name: execute prepare-pinger script
  when: neutron_qe_test|bool
  environment:
    OS_CLOUD_IP: "{{ standalone_ip | default(edpm_node_ip) }}"
  ansible.builtin.shell: |
      ssh ${OS_CLOUD_IP} "set -o pipefail && chmod 744 {{ neutron_qe_dir }}/prepare-pinger.sh && \
      {{ neutron_qe_dir }}/prepare-pinger.sh > {{ neutron_qe_dir }}/prepare-pinger.sh.log 2>&1"

- name: execute start-pinger script
  when: neutron_qe_test|bool
  environment:
    OS_CLOUD_IP: "{{ standalone_ip | default(edpm_node_ip) }}"
  ansible.builtin.shell: |
      timeout 20 ssh ${OS_CLOUD_IP} "set -o pipefail && chmod 744 {{ neutron_qe_dir }}/start-pinger.sh && \
      nohup {{ neutron_qe_dir }}/start-pinger.sh > {{ neutron_qe_dir }}/start-pinger.sh.log 2>&1" &
