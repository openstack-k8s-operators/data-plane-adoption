- name: set shell vars for stopping openstack services
  no_log: "{{ use_no_log }}"
  ansible.builtin.set_fact:
    stop_openstack_services_shell_vars: |
      CONTROLLER1_SSH="{{ controller1_ssh }}"
      CONTROLLER2_SSH="{{ controller2_ssh }}"
      CONTROLLER3_SSH="{{ controller3_ssh }}"

# TODO(bogdando): split Compute services on dataplane after the multi-node/multi-cells adoption supported
- name: stop control plane services
  no_log: "{{ use_no_log }}"
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    {{ stop_openstack_services_shell_vars }}

    PacemakerResourcesToStop=("openstack-cinder-volume"
                              "openstack-cinder-backup"
                              "openstack-manila-share")

    echo "Stopping systemd OpenStack services"
    for i in {1..3}; do
            SSH_CMD=CONTROLLER${i}_SSH
            if [ ! -z "${!SSH_CMD}" ]; then
                echo "Stopping the tripleo services in controller $i"
                    ${!SSH_CMD} sudo systemctl stop tripleo*
                    ${!SSH_CMD} "sudo while systemctl is-active tripleo*|grep tripleo ;do sleep 3s ;done"
                    ${!SSH_CMD} systemctl show service | grep ActiveState=inactive
            fi
    done

    echo "Stopping pacemaker OpenStack services"
    for i in {1..3}; do
        SSH_CMD=CONTROLLER${i}_SSH
        if [ ! -z "${!SSH_CMD}" ]; then
            echo "Using controller $i to run pacemaker commands"
            for resource in ${PacemakerResourcesToStop[*]}; do
                if ${!SSH_CMD} sudo pcs resource config $resource; then
                    ${!SSH_CMD} sudo pcs resource disable $resource
                fi
            done
            break
        fi
    done
