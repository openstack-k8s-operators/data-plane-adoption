- name: Add swift.conf secret
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    CONTROLLER1_SSH="{{ controller1_ssh }}"
    oc apply -f - <<EOF
    apiVersion: v1
    kind: Secret
    metadata:
      name: swift-conf
    type: Opaque
    data:
      swift.conf: $($CONTROLLER1_SSH sudo cat /var/lib/config-data/puppet-generated/swift/etc/swift/swift.conf | base64 -w0)
    EOF

- name: Add swift ring files configmap
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    CONTROLLER1_SSH="{{ controller1_ssh }}"
    oc apply -f - <<EOF
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: swift-ring-files
    binaryData:
      swiftrings.tar.gz: $($CONTROLLER1_SSH "cd /var/lib/config-data/puppet-generated/swift/etc/swift && tar cz *.builder *.ring.gz backups/ | base64 -w0")
      account.ring.gz: $($CONTROLLER1_SSH "base64 -w0 /var/lib/config-data/puppet-generated/swift/etc/swift/account.ring.gz")
      container.ring.gz: $($CONTROLLER1_SSH "base64 -w0 /var/lib/config-data/puppet-generated/swift/etc/swift/container.ring.gz")
      object.ring.gz: $($CONTROLLER1_SSH "base64 -w0 /var/lib/config-data/puppet-generated/swift/etc/swift/object.ring.gz")
    EOF

- name: Check if storagemgmt NetworkAttachmentDefinition exists
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    oc get network-attachment-definitions storagemgmt
  register: storagemgmt_nad_check
  failed_when: false

- name: Set storagemgmt_available variable
  ansible.builtin.set_fact:
    storagemgmt_available: "{{ storagemgmt_nad_check.rc == 0 }}"

- name: Debug storagemgmt availability
  ansible.builtin.debug:
    msg: "storagemgmt NetworkAttachmentDefinition available: {{ storagemgmt_available }}"

- name: Deploy podified Swift
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    oc patch openstackcontrolplane openstack --type=merge --patch '{{ swift_patch }}'

- name: Wait for Swift to start up
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    oc wait pod --for condition=Ready -l component=swift-proxy
  register: swift_running_result
  until: swift_running_result is success
  retries: 60
  delay: "{{ swift_retry_delay }}"

- name: check that Swift is reachable and its endpoints are defined
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    alias openstack="oc exec -t openstackclient -- openstack"

    ${BASH_ALIASES[openstack]} endpoint list | grep -i object-store
    ${BASH_ALIASES[openstack]} container list
  register: swift_responding_result
  until: swift_responding_result is success
  retries: 15
