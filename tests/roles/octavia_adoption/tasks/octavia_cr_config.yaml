- name: Add the octavia interfaces to each NodeNetworkConfigurationPolicy
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}

    oc get --no-headers nncp | cut -f 1 -d ' ' | grep -v nncp-dns | while read; do

    interfaces=$(oc get nncp $REPLY -o jsonpath="{.spec.desiredState.interfaces[*].name}")

    (echo $interfaces | grep -w -q "octbr\|enp6s0.24") || \
            oc patch nncp $REPLY --type json --patch '
    [{
        "op": "add",
        "path": "/spec/desiredState/interfaces/-",
        "value": {
          "description": "Octavia VLAN host interface",
          "name": "enp6s0.24",
          "state": "up",
          "type": "vlan",
          "vlan": {
            "base-iface": "enp6s0",
            "id": 24
            }
        }
    },
    {
        "op": "add",
        "path": "/spec/desiredState/interfaces/-",
        "value": {
          "description": "Octavia Bridge",
          "mtu": 1500,
          "state": "up",
          "type": "linux-bridge",
          "name": "octbr",
          "bridge": {
            "options": { "stp": { "enabled": "false" } },
            "port": [ { "name": "enp6s0.24" } ]
            }
        }
    }]'

    done

- name: Configure the network attachment definition
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}

    cat >> octavia-nad.yaml << EOF_CAT
    apiVersion: k8s.cni.cncf.io/v1
    kind: NetworkAttachmentDefinition
    metadata:
      labels:
        osp/net: octavia
      name: octavia
    spec:
      config: |
        {
          "cniVersion": "0.3.1",
          "name": "octavia",
          "type": "bridge",
          "bridge": "octbr",
          "ipam": {
            "type": "whereabouts",
            "range": "172.23.0.0/24",
            "range_start": "172.23.0.30",
            "range_end": "172.23.0.70",
            "routes": [
              {
                "dst": "172.24.0.0/16",
                "gw" : "172.23.0.150"
              }
            ]
          }
        }
    EOF_CAT
    oc apply -f octavia-nad.yaml

- name: Enable the octavia service in OpenShift
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}

    # FIXME: debug only. remove.
    oc project

    oc patch openstackcontrolplane openstack --type=merge --patch '
    spec:
      ovn:
        template:
          ovnController:
            networkAttachment: tenant
            nicMappings:
              octavia: octbr
      octavia:
        enabled: true
        template:
          apacheContainerImage: registry.redhat.io/rhel8/httpd-24:latest
          amphoraImageContainerImage: quay.io/gthiemonge/octavia-amphora-image
          octaviaHousekeeping:
            networkAttachments:
              - octavia
          octaviaHealthManager:
            networkAttachments:
              - octavia
          octaviaWorker:
            networkAttachments:
              - octavia
    '

- name: Wait for the octavia control plane service CRs to become ready
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}

    oc wait --for condition=Ready --timeout=60s octavia.octavia.openstack.org/octavia
  register: octavia_crs_ready_result
  until: octavia_crs_ready_result is success
  retries: 60
  delay: 2

- name: check that Octavia is reachable and its endpoints are defined
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    alias openstack="oc exec -t openstackclient -- openstack"
    ${BASH_ALIASES[openstack]} endpoint list | grep octavia
  register: octavia_responding_result
  until: octavia_responding_result is success
  retries: 60
  delay: 2
