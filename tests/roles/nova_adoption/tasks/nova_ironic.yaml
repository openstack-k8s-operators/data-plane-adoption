- name: deploy podified Nova conductors, scheduler, metadata, API, and Compute-Ironic
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    oc patch openstackcontrolplane openstack -n openstack --type=merge --patch '{{ nova_ironic_patch}}'

- name: wait for Nova control plane services' CRs to become ready
  ansible.builtin.include_tasks:
    file: wait.yaml

- name: Remove FFU workarounds
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    oc patch openstackcontrolplane openstack -n openstack --type=merge --patch '{{ remove_ffu_workaround_patch }}'

- name: wait for Nova control plane services' CRs to become ready
  ansible.builtin.include_tasks:
    file: wait.yaml

- name: wait for Nova control plane services' CRs to become ready
  ansible.builtin.include_tasks:
    file: check_endpoints.yaml

- name: Provision new instance on ironic
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    alias openstack="oc exec -t openstackclient -- openstack"

    function wait_server_active() {
      local server_name=$1
      local retries=100
      local counter=0
      set +e
      until ${BASH_ALIASES[openstack]} server show ${server_name} -f value -c status | grep "ACTIVE"; do
        if [[ "$counter" -eq "$retries" ]]; then
          echo "ERROR: Timeout. Server: \"${server_name}\" did not reach state: \"ACTIVE\""
          ${BASH_ALIASES[openstack]} server show ${server_name}
          exit 1
        fi
        echo "Waiting for image \"${server_name}\" to reach state \"ACTIVE\""
        sleep 10
        ((counter++))
      done
      set -e
    }

    ${BASH_ALIASES[openstack]} server create baremetal-test-post-adoption --flavor baremetal --image Fedora-Cloud-Base-38 --nic net-id=provisioning
    wait_server_active baremetal-test-post-adoption

    # Check instance status and network connectivity
    ${BASH_ALIASES[openstack]} server show baremetal-test-post-adoption
    ping -c 4 $(${BASH_ALIASES[openstack]} server show baremetal-test-post-adoption -f json -c addresses | jq -r .addresses.provisioning[0])
