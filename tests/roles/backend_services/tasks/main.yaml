- name: create osp-secret
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    cd {{ install_yamls_path }}
    make input

- name: set service passwords
  no_log: "{{ use_no_log }}"
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    {% if cinder_password %}
        oc set data secret/osp-secret "CinderPassword={{ cinder_password }}"
    {% endif %}
    {% if glance_password %}
        oc set data secret/osp-secret "GlancePassword={{ glance_password }}"
    {% endif %}
    {% if ironic_password %}
        oc set data secret/osp-secret "IronicPassword={{ ironic_password }}"
    {% endif %}
    {% if neutron_password %}
        oc set data secret/osp-secret "NeutronPassword={{ neutron_password }}"
    {% endif %}
    {% if nova_password %}
        oc set data secret/osp-secret "NovaPassword={{ nova_password }}"
    {% endif %}
    {% if octavia_password %}
        oc set data secret/osp-secret "OctaviaPassword={{ octavia_password }}"
    {% endif %}
    {% if placement_password %}
        oc set data secret/osp-secret "PlacementPassword={{ placement_password }}"
    {% endif %}

- name: deploy backend services
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    oc apply -f - <<EOF
    apiVersion: core.openstack.org/v1beta1
    kind: OpenStackControlPlane
    metadata:
      name: openstack
    spec:
      secret: osp-secret
      storageClass: local-storage

      keystone:
        enabled: false
        template: {}

      mariadb:
        templates:
          openstack:
            containerImage: quay.io/tripleozedcentos9/openstack-mariadb:current-tripleo
            storageRequest: 500M

      rabbitmq:
        templates:
          rabbitmq:
            replicas: 1
          rabbitmq-cell1:
            replicas: 1

      placement:
        enabled: false
        template: {}

      glance:
        enabled: false
        template:
          glanceAPIInternal: {}
          glanceAPIExternal: {}

      cinder:
        enabled: false
        template:
          cinderVolumes: {}

      ovn:
        enabled: false
        template: {}

      ovs:
        enabled: false
        template: {}

      neutron:
        enabled: false
        template: {}

      nova:
        enabled: false
        template: {}

      ironic:
        enabled: false
        template:
          ironicConductors: []
    EOF

- name: wait for mariadb to start up
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    oc get pod mariadb-openstack -o jsonpath='{.status.phase}{"\n"}' | grep Running
  register: mariadb_running_result
  until: mariadb_running_result is success
  retries: 60
  delay: 2
