# do not merge
- name: use openstack project
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    oc project openstack

- name: create osp-secret
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    cd {{ install_yamls_path }}
    make input

- name: set service passwords
  no_log: "{{ use_no_log }}"
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    {% if cinder_password %}
        oc set data secret/osp-secret "CinderPassword={{ cinder_password }}"
    {% endif %}
    {% if glance_password %}
        oc set data secret/osp-secret "GlancePassword={{ glance_password }}"
    {% endif %}
    {% if ironic_password %}
        oc set data secret/osp-secret "IronicPassword={{ ironic_password }}"
    {% endif %}
    {% if neutron_password %}
        oc set data secret/osp-secret "NeutronPassword={{ neutron_password }}"
    {% endif %}
    {% if nova_password %}
        oc set data secret/osp-secret "NovaPassword={{ nova_password }}"
    {% endif %}
    {% if octavia_password %}
        oc set data secret/osp-secret "OctaviaPassword={{ octavia_password }}"
    {% endif %}
    {% if placement_password %}
        oc set data secret/osp-secret "PlacementPassword={{ placement_password }}"
    {% endif %}

- name: when not a periodic CI job use the base deployment
  when: not periodic|default(false)
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    mkdir -p tmp
    oc kustomize base > tmp/test_deployment.yaml
    oc apply -f tmp/test_deployment.yaml
  args:
    chdir: "../config"

- name: when periodic, create kustomize container_images_overrides.yaml
  when:
    - periodic|default(false)
    - container_registry is defined
    - container_tag is defined
    - container_namespace is defined
  block:
    - name: template out the override deployment
      ansible.builtin.template:
        src: container_overrides.j2
        dest: "../config/periodic_ci/container_image_overrides.yaml"
        force: true

    - name: run kustomize and create controlplane with container overrides
      ansible.builtin.shell: |
        {{ shell_header }}
        {{ oc_header }}
        mkdir -p tmp
        oc kustomize periodic_ci > tmp/test_deployment.yaml
        oc apply -f tmp/test_deployment.yaml
      args:
        chdir: "../config"

- name: wait for mariadb to start up
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    oc get pod mariadb-openstack -o jsonpath='{.status.phase}{"\n"}' | grep Running
  register: mariadb_running_result
  until: mariadb_running_result is success
  retries: 60
  delay: 2

- name: Patch rabbitmq resources for lower resource consumption
  changed_when: false
  ansible.builtin.shell: |
    crname=$(oc get openstackcontrolplane -o name)
    oc patch ${crname} --type json \
      -p='[{"op": "replace", "path": "/spec/rabbitmq/templates/rabbitmq/resources/requests/cpu", "value": 500m}]'
    oc patch ${crname} --type json \
      -p='[{"op": "replace", "path": "/spec/rabbitmq/templates/rabbitmq/resources/requests/memory", "value": 500Mi}]'
    oc patch ${crname} --type json \
      -p='[{"op": "replace", "path": "/spec/rabbitmq/templates/rabbitmq-cell1/resources/requests/cpu", "value": 500m}]'
    oc patch ${crname} --type json \
      -p='[{"op": "replace", "path": "/spec/rabbitmq/templates/rabbitmq-cell1/resources/requests/memory", "value": 500Mi}]'
