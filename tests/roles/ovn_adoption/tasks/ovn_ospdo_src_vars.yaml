- name: get ospdo source_ovndb_ip
  ansible.builtin.shell: |
    oc -n {{ director_namespace }} get cm tripleo-exports-default  -o yaml | awk '/ovn_dbs_node_ips:/{getline; print $3}'|tr -d '\\n'
  register: source_ovndb_ip_str

- name: register controller node
  no_log: "{{ use_no_log }}"
  ansible.builtin.shell: |
    oc get vmi -n{{ director_namespace }} -o jsonpath='{.items[0].metadata.labels.kubevirt\.io/nodeName}'
  register: controller_node

- name: get OSPdO storage storageClass
  ansible.builtin.shell: |
    oc get -n {{ director_namespace }} pvc openstackclient-hosts -o jsonpath='{.spec.storageClassName}'
  register: ospdo_storage_class

- name: set OVN copy shell vars
  no_log: "{{ use_no_log }}"
  ansible.builtin.set_fact:
    ovn_copy_shell_vars: |
      STORAGE_CLASS={{ ospdo_storage_class.stdout }}
      PODIFIED_OVSDB_NB_IP={{ podified_ovn_nb_ip_result.stdout }}
      PODIFIED_OVSDB_SB_IP={{ podified_ovn_sb_ip_result.stdout }}
      OVSDB_IMAGE={{ ovn_image }}

      SOURCE_OVSDB_IP={{ source_ovndb_ip_str.stdout }}

      CONTROLLER1_SSH="{{ controller1_ssh }}"
      CONTROLLER2_SSH="echo ospdo src env, skipping on controller-1 "
      CONTROLLER3_SSH="echo ospdo src env ,skipping on controller-2 "

- name: create ovn-data-cert secret
  ansible.builtin.shell: |
    oc apply -f - <<EOF
    ---
    apiVersion: v1
    kind: Secret
    metadata:
      name: ovn-data-cert
      namespace: {{ director_namespace }}
    type: Opaque
    EOF
