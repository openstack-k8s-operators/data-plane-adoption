netconfig_networks:
  - name: ctlplane
    dnsDomain: ctlplane.redhat.local
    subnets:
      - name: subnet1
        allocationRanges:
          - end: 192.168.23.15
            start: 192.168.23.4
        cidr: 192.168.23.0/24
        gateway: 192.168.23.1
  - name: internalapi
    dnsDomain: internalapi.redhat.local
    subnets:
      - name: subnet1
        allocationRanges:
          - end: 172.15.2.15
            start: 172.15.2.4
        cidr: 172.15.2.0/24
        vlan: 20
  - name: External
    dnsDomain: external.redhat.local
    subnets:
      - name: subnet1
        allocationRanges:
          - end: 10.4.0.15
            start: 10.4.0.4
        cidr: 10.4.0.0/24
        gateway: 10.4.0.1
        vlan: 10
  - name: tenant
    dnsDomain: tenant.redhat.local
    subnets:
      - name: subnet1
        allocationRanges:
          - end: 172.15.0.15
            start: 172.15.0.4
        cidr: 172.15.0.0/24
        vlan: 50
edpm_node_hostname: compute-0.redhat.local
edpm_node2_hostname: compute-1.redhat.local
edpm_user: stack
edpm_nodes:
  compute-0:
    hostName: "{{ edpm_node_hostname }}"
    ansible:
      ansibleHost: "{{ edpm_node_ip }}"
    networks:
      - defaultRoute: true
        fixedIP: "{{ edpm_node_ip }}"
        name: ctlplane
        subnetName: subnet1
      - name: internalapi
        fixedIP: 172.15.2.10
        subnetName: subnet1
      - name: tenant
        fixedIP: 172.15.0.10
        subnetName: subnet1
      - name: External
        fixedIP: 10.4.0.10
        subnetName: subnet1
  compute-1:
    hostName: "{{ edpm_node2_hostname }}"
    ansible:
      ansibleHost: "{{ edpm_node2_ip }}"
    networks:
      - defaultRoute: true
        fixedIP: "{{ edpm_node2_ip }}"
        name: ctlplane
        subnetName: subnet1
      - name: internalapi
        fixedIP: 172.15.2.11
        subnetName: subnet1
      - name: tenant
        fixedIP: 172.15.0.11
        subnetName: subnet1
      - name: External
        fixedIP: 10.4.0.11
        subnetName: subnet1
edpm_computes: |-
  ["{{ edpm_node_hostname }}"]="{{ edpm_node_ip }}"
  ["{{ edpm_node2_hostname }}"]="{{ edpm_node2_ip }}"
# The variables inside edpm_network_config_template are evaluated based
# on the OpenstackDataplaneNodeSet inventory. For adding a variable to the invetory,
# please add it to OpenstackDataplaneNodeSet.nodeTemplate.ansibleVars
edpm_network_config_template: |
  {%- raw %}
  ---
  {% set mtu_list = [ctlplane_mtu] %}
  {% for network in nodeset_networks %}
  {{ mtu_list.append(lookup('vars', networks_lower[network] ~ '_mtu')) }}
  {%- endfor %}
  {% set min_viable_mtu = mtu_list | max %}
  network_config:
  - type: interface
    name: nic1
    use_dhcp: true
  - type: interface
    name: nic2
    use_dhcp: false
    dns_servers: {{ ctlplane_dns_nameservers }}
    domain: {{ dns_search_domains }}
    addresses:
    - ip_netmask: {{ ctlplane_ip }}/{{ ctlplane_cidr }}
    routes: {{ ctlplane_host_routes }}
  - type: interface
    name: nic3
    use_dhcp: false
    addresses:
    - ip_netmask: {{ tenant_ip }}/{{ tenant_cidr }}
    routes: {{ tenant_host_routes }}
  - type: interface
    name: nic4
    use_dhcp: false
    addresses:
    - ip_netmask: {{ internalapi_ip }}/{{ internalapi_cidr }}
    routes: {{ internalapi_host_routes }}
  - type: ovs_bridge
    name: {{ neutron_physical_bridge_name }}
    dns_servers: {{ ctlplane_dns_nameservers }}
    domain: {{ dns_search_domains }}
    use_dhcp: false
    addresses:
    - ip_netmask: {{ external_ip }}/{{ external_cidr }}
    routes: []
    members:
    - type: interface
      name: nic5
      primary: true
  {% endraw %}
neutron_physical_bridge_name: br-ex
neutron_public_interface_name: eth4
edpm_sshd_allowed_ranges: ['192.168.23.0/24']
