- name: set Cinder services shell vars
  no_log: "{{ use_no_log }}"
  ansible.builtin.set_fact:
    osc_header: |
      alias openstack="oc exec -t openstackclient -- openstack"

- name: Verify that the volumes and snapshots have correct name, status and size
  when:
    - prelaunch_test_instance|bool
    - cinder_volume_backend in supported_volume_backends
  ansible.builtin.shell: |
    {{ osc_header }}
    ${BASH_ALIASES[openstack]} volume list -c Name -c Status -c Size -f value | grep "disk in-use 1"
    ${BASH_ALIASES[openstack]} volume list -c Name -c Status -c Size -f value | grep "boot-volume in-use 1"
    ${BASH_ALIASES[openstack]} volume snapshot list -c Name -c Status -c Size -f value | grep "snapshot available 1"
  register: cinder_verify_volumes
  until: cinder_verify_volumes is success
  retries: 10
  delay: "{{ dataplane_retry_delay }}"

- name: verify the backup of disk volume
  when:
    - prelaunch_test_instance|bool
    - cinder_backup_backend in supported_backup_backends
  ansible.builtin.shell: |
    {{ osc_header }}
    ${BASH_ALIASES[openstack]} volume backup list -c Name -c Status -c Size -f value | grep "backup available 1"
  register: cinder_verify_resources
  until: cinder_verify_resources is success
  retries: 10
  delay: "{{ dataplane_retry_delay }}"

- name: Detach disk volume
  when:
    - prelaunch_test_instance|bool
    - cinder_volume_backend in supported_volume_backends
  block:
    - name: Detach the disk data volume
      ansible.builtin.shell: |
        {{ osc_header }}
        ${BASH_ALIASES[openstack]} server remove volume test disk

    - name: Wait for disk data volume to be available after detach
      ansible.builtin.shell: |
        {{ osc_header }}
        ${BASH_ALIASES[openstack]} volume list -c Name -c Status -f value | grep "disk available"
      register: detach_volume
      until: detach_volume is success
      retries: 10
      delay: "{{ dataplane_retry_delay }}"

- name: Restore snapshot
  when:
    - prelaunch_test_instance|bool
    - cinder_volume_backend in supported_volume_backends
  block:
    - name: Restore snapshot to disk volume
      ansible.builtin.shell: |
        {{ osc_header }}
        ${BASH_ALIASES[openstack]} --os-volume-api-version 3.40 volume revert snapshot

    - name: Wait for disk data volume to be available after revert
      ansible.builtin.shell: |
        {{ osc_header }}
        ${BASH_ALIASES[openstack]} volume list -c Name -c Status -f value | grep "disk available"
      register: revert_snapshot
      until: revert_snapshot is success
      retries: 10
      delay: "{{ dataplane_retry_delay }}"

- name: Attach disk volume
  when:
    - prelaunch_test_instance|bool
    - cinder_volume_backend in supported_volume_backends
  block:
    - name: Attach the disk data volume
      ansible.builtin.shell: |
        {{ osc_header }}
        ${BASH_ALIASES[openstack]} server add volume test disk

    - name: Wait for disk data volume to be in-use after attach
      ansible.builtin.shell: |
        {{ osc_header }}
        ${BASH_ALIASES[openstack]} volume list -c Name -c Status -f value | grep "disk in-use"
      register: attach_volume
      until: attach_volume is success
      retries: 10
      delay: "{{ dataplane_retry_delay }}"
